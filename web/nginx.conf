limit_req_zone $binary_remote_addr zone=general_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;

upstream flask_backend {
    server 127.0.0.1:8000;
}

server {
    listen 80;
    listen [::]:80;

    server_name ai-detect.devbox.buzz;

    # ACME challenge for Let's Encrypt validation (if using certbot webroot)
    location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ai-detect.devbox.buzz;

    ssl_certificate /etc/letsencrypt/live/ai-detect.devbox.buzz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai-detect.devbox.buzz/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always; # Or "SAMEORIGIN"
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none';" always;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    location / {
        limit_req zone=general_limit burst=20 nodelay;

        proxy_pass http://flask_backend;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffers               4 32k;

        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }


    location ~ /\. {
        deny all;
    }

    client_max_body_size 10M;
}

