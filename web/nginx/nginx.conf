limit_req_zone $binary_remote_addr zone=general_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;

upstream flask_backend {
    server backend:8000;
}

log_format custom_json_format escape=json
    '{ "@timestamp": "$time_iso8601", '
    '"client_ip": "$remote_addr", '
    '"x_forwarded_for": "$proxy_add_x_forwarded_for", '
    '"remote_user": "$remote_user", '
    '"bytes_sent": $bytes_sent, '
    '"request_time_ms": $request_time, '
    '"status": $status, '
    '"vhost": "$host", '
    '"request_protocol": "$server_protocol", '
    '"request_path": "$uri", '
    '"request_query": "$args", '
    '"request_length": $request_length, '
    '"request_method": "$request_method", '
    '"http_referer": "$http_referer", '
    '"http_user_agent": "$http_user_agent", '
    '"upstream_addr": "$upstream_addr", '
    '"upstream_status": "$upstream_status", '
    '"upstream_response_time_ms": "$upstream_response_time", '
    '"upstream_connect_time_ms": "$upstream_connect_time" }';

server {
    listen 80;
    listen [::]:80;

    server_name ai-detect.devbox.buzz;

    server_tokens off;

    # ACME challenge for Lets Encrypt validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    location = / {
        return 301 https://$host$request_uri;
    }

    location / {
        return 403 Forbidden;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ai-detect.devbox.buzz;

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/ai-detect.devbox.buzz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai-detect.devbox.buzz/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always; # Or "SAMEORIGIN"
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none';" always;

    # Logging
    access_log /var/log/nginx/access.log custom_json_format;
    error_log /var/log/nginx/error.log warn;

    client_max_body_size 2M;

    location = / {
        if ($request_method !~ ^(GET|POST)$) {
            return 405;
        }
        limit_req zone=general_limit burst=20 nodelay;

        include /etc/nginx/snippets/proxy_common.conf;

        proxy_pass http://flask_backend;
    }

    location = /download_cleaned {
        if ($request_method !~ ^POST$) {
            return 405;
        }
        limit_req zone=general_limit burst=20 nodelay;

        include /etc/nginx/snippets/proxy_common.conf;

        proxy_pass http://flask_backend/download_cleaned;
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
        return 404;
    }

    location ~ /\. {
        log_not_found off;
        return 403 Forbidden;
    }

    location / {
        return 403 Forbidden;
    }
}